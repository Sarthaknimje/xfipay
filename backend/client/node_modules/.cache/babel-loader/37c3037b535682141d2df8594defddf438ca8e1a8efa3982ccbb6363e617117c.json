{"ast":null,"code":"var _jsxFileName = \"C:\\\\proj\\\\client\\\\src\\\\components\\\\DefiIntegration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWallet } from '../utils/WalletContext';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefiIntegration = () => {\n  _s();\n  const [apyData, setApyData] = useState({});\n  const [stakeAmount, setStakeAmount] = useState('');\n  const {\n    account,\n    provider\n  } = useWallet();\n  useEffect(() => {\n    fetchApyData();\n  }, []);\n  const fetchApyData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/defi/apy');\n      setApyData(response.data);\n    } catch (error) {\n      console.error('Error fetching APY data:', error);\n    }\n  };\n  const handleStake = async () => {\n    if (!account || !provider) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    try {\n      const signer = provider.getSigner();\n      const defiContractAddress = '0x...'; // Add the address of the CrossFi DeFi contract\n      const defiContractABI = []; // Add the ABI of the CrossFi DeFi contract\n      const defiContract = new ethers.Contract(defiContractAddress, defiContractABI, signer);\n      const amount = ethers.utils.parseEther(stakeAmount);\n      const tx = await defiContract.stake(amount);\n      await tx.wait();\n      alert('Successfully staked in CrossFi DeFi protocol!');\n      setStakeAmount('');\n    } catch (error) {\n      console.error('Error staking in DeFi protocol:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"CrossFi DeFi Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-bold\",\n        children: \"Current APY Rates:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lending: \", apyData.lending, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Staking: \", apyData.staking, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Liquidity Mining: \", apyData.liquidityMining, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: stakeAmount,\n        onChange: e => setStakeAmount(e.target.value),\n        placeholder: \"Amount to stake\",\n        className: \"w-full px-3 py-2 border rounded mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStake,\n        className: \"w-full bg-purple-500 text-white py-2 rounded hover:bg-purple-600\",\n        children: \"Stake in CrossFi DeFi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DefiIntegration, \"VUfhVuFoR+E1S76A8GZI/vMzhGU=\", false, function () {\n  return [useWallet];\n});\n_c = DefiIntegration;\nexport default DefiIntegration;\nvar _c;\n$RefreshReg$(_c, \"DefiIntegration\");","map":{"version":3,"names":["React","useState","useEffect","useWallet","ethers","axios","jsxDEV","_jsxDEV","DefiIntegration","_s","apyData","setApyData","stakeAmount","setStakeAmount","account","provider","fetchApyData","response","get","data","error","console","handleStake","alert","signer","getSigner","defiContractAddress","defiContractABI","defiContract","Contract","amount","utils","parseEther","tx","stake","wait","className","children","fileName","_jsxFileName","lineNumber","columnNumber","lending","staking","liquidityMining","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/proj/client/src/components/DefiIntegration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useWallet } from '../utils/WalletContext';\r\nimport { ethers } from 'ethers';\r\nimport axios from 'axios';\r\n\r\nconst DefiIntegration = () => {\r\n  const [apyData, setApyData] = useState({});\r\n  const [stakeAmount, setStakeAmount] = useState('');\r\n  const { account, provider } = useWallet();\r\n\r\n  useEffect(() => {\r\n    fetchApyData();\r\n  }, []);\r\n\r\n  const fetchApyData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/defi/apy');\r\n      setApyData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching APY data:', error);\r\n    }\r\n  };\r\n\r\n  const handleStake = async () => {\r\n    if (!account || !provider) {\r\n      alert('Please connect your wallet first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const signer = provider.getSigner();\r\n      const defiContractAddress = '0x...'; // Add the address of the CrossFi DeFi contract\r\n      const defiContractABI = []; // Add the ABI of the CrossFi DeFi contract\r\n      const defiContract = new ethers.Contract(defiContractAddress, defiContractABI, signer);\r\n\r\n      const amount = ethers.utils.parseEther(stakeAmount);\r\n      const tx = await defiContract.stake(amount);\r\n      await tx.wait();\r\n\r\n      alert('Successfully staked in CrossFi DeFi protocol!');\r\n      setStakeAmount('');\r\n    } catch (error) {\r\n      console.error('Error staking in DeFi protocol:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n      <h3 className=\"text-xl font-bold mb-4\">CrossFi DeFi Integration</h3>\r\n      <div className=\"mb-4\">\r\n        <h4 className=\"font-bold\">Current APY Rates:</h4>\r\n        <p>Lending: {apyData.lending}%</p>\r\n        <p>Staking: {apyData.staking}%</p>\r\n        <p>Liquidity Mining: {apyData.liquidityMining}%</p>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"number\"\r\n          value={stakeAmount}\r\n          onChange={(e) => setStakeAmount(e.target.value)}\r\n          placeholder=\"Amount to stake\"\r\n          className=\"w-full px-3 py-2 border rounded mb-2\"\r\n        />\r\n        <button\r\n          onClick={handleStake}\r\n          className=\"w-full bg-purple-500 text-white py-2 rounded hover:bg-purple-600\"\r\n        >\r\n          Stake in CrossFi DeFi\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DefiIntegration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}